name: Auto-add Bug Issues to Project

on:
  issues:
    types: [labeled]
  pull_request:
    types: [labeled]

permissions:
  issues: read
  contents: read

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    # Only run when the 'bug' label is added
    if: contains(github.event.label.name, 'bug')
    steps:
      - name: Add to Bug Tracking Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_SYNC_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issueNumber = context.payload.issue?.number || context.payload.pull_request?.number;
            const isIssue = !!context.payload.issue;
            
            if (!issueNumber) return;
            
            console.log(`Adding ${isIssue ? 'issue' : 'PR'} #${issueNumber} to Bug Tracking project`);
            
            // CONFIGURE: Your project name
            const targetProjectName = 'Test Project';
            
            // Get issue/PR ID and find the project
            const query = `
              query($owner: String!, $repo: String!, $issueNumber: Int!, $orgName: String!) {
                repository(owner: $owner, name: $repo) {
                  ${isIssue ? 'issue' : 'pullRequest'}(number: $issueNumber) {
                    id
                  }
                }
                organization(login: $orgName) {
                  projectsV2(first: 10, query: "Delivery") {
                    nodes {
                      id
                      title
                      items(first: 100) {
                        nodes {
                          id
                          content {
                            ... on Issue {
                              id
                              number
                            }
                            ... on PullRequest {
                              id
                              number
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            
            const result = await github.graphql(query, {
              owner,
              repo,
              issueNumber,
              orgName: owner
            });
            
            const itemId = result.repository[isIssue ? 'issue' : 'pullRequest'].id;
            console.log(`${isIssue ? 'Issue' : 'PR'} ID: ${itemId}`);
            
            // Find the target project
            const targetProject = result.organization.projectsV2.nodes.find(
              project => project.title === targetProjectName
            );
            
            if (!targetProject) {
              console.log(`Project "${targetProjectName}" not found`);
              console.log('Available projects:', result.organization.projectsV2.nodes.map(p => p.title));
              return;
            }
            
            console.log(`Found target project: ${targetProject.title}`);
            
            // Check if item is already in the project
            const existingItem = targetProject.items.nodes.find(item => 
              item.content && item.content.id === itemId
            );
            
            if (existingItem) {
              console.log(`${isIssue ? 'Issue' : 'PR'} #${issueNumber} is already in project "${targetProjectName}"`);
              return;
            }
            
            // Add the item to the project
            const addMutation = `
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemByContentId(input: {
                  projectId: $projectId
                  contentId: $contentId
                }) {
                  item {
                    id
                  }
                }
              }
            `;
            
            await github.graphql(addMutation, {
              projectId: targetProject.id,
              contentId: itemId
            });
            
            console.log(`Successfully added ${isIssue ? 'issue' : 'PR'} #${issueNumber} to project "${targetProjectName}"`);
